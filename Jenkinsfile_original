pipeline {
    agent any
    tools {
        maven "maven3.8.1"
    }
    stages {
        stage('Build') {
            steps {
                echo 'THis is Build step'
                git branch: 'develop', credentialsId: 'GithubCredentials', url: 'https://github.com/sdakinedi/time-tracker.git'
            }
        }
        
        stage('Integration Tests') {
            steps {
                echo 'This will test'
                 sh 'mvn test'
            }
        }  
        stage('Results') {
            steps {
                echo 'This will show Results'
                 junit '**/*.xml'
                 
            }
        }
        
        stage('Package') {
            steps {
                echo 'This will Package'
                 sh 'mvn package'
                 archiveArtifacts artifacts: '**/*.war', followSymlinks: false
            }
        }
		
		stage('Upload the Binary to NEXUS') {
            steps {
               nexusPublisher nexusInstanceId: 'nexus-on-ec2', nexusRepositoryId: 'Jenkins-ci-maven-nexus-repo', packages: [[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: '', filePath: 'web/target/webapp-0.5.0-SNAPSHOT.war']], mavenCoordinate: [artifactId: 'webapp', groupId: 'com.mycompany', packaging: 'war', version: '3.0']]]
            }
        }
		
		stage('Pull from Nexus') {
            steps {
               sh 'wget --user=admin --password=admin123 http://35.157.219.41:8081/repository/Jenkins-ci-maven-nexus-repo/com/mycompany/webapp/3.0/webapp-3.0.war'
            }
        }
		
        stage('Deploy') {
            steps {
               echo 'This will Package'
                 deploy adapters: [tomcat9(credentialsId: 'TOMCAT_DEPLOYER', path: '', url: 'http://54.93.125.238:8090/')], contextPath: null, war: 'webapp-3.0.war'
           }
        }
		
	   stage('Slack Notification') {
            steps {
               slackSend channel: 'cicd-training', color: 'slackSend color: "#439FE0", message: "Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}"', message: 'slackSend "started ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"', teamDomain: 'jenkins-cicd-training', tokenCredentialId: 'Jenkins-Slack-token'
           }
        }
		
		

    }
}
